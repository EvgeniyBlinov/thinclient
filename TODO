[x] network configuration for node by vagrant, example: https://www.vagrantup.com/docs/provisioning/ansible_local.html#ansible-parallel-execution-from-a-guest
https://www.vagrantup.com/docs/networking/public_network.html
https://www.vagrantup.com/docs/networking/private_network.html
[x] install X, rdp client, auto script to parse kernel boot params for RDP servers. Use parameter in vars.yml, default: yes. User should disable it to build minimal image without gui.
[x] simplify overlays - no overlay build scripts
[x] auto remove old linux kernel packages
[x] test overlays and document it
[x] initrd - switch to bzip
[x] server - make dnsmasq service always restart on fail (fails because cat't see shared directory).
[x] network interfaces - start dhcp for all interfaces in new machine
[x] network - update resolv.conf from dhcp - it works, I forgot to mention dns server in dnsmasq config :)
[x] change server IP from 192.168.10.1 - to prevent Vagrant warnings
[x] console autologin https://wiki.archlinux.org/index.php/Getty#Automatic_login_to_virtual_console
[x] Use overlayfs instead of AUFS
[x] Display message for N sec and reboot from initrd if something goes wrong
[x] Playbook structure: provision.yml -> provision_server.yml, provision_client.yml, provision_client_gui.yml
[x] Specify packages to exclude all their files from image. Like virtualbox-guest-utils, grub*, openssh-server and so on.
[x] Graphic drivers - choose in vars.yml
[x] Template - switch to python3 for ansible, no need for python2
[ ] update-initramfs - use separate config for ram initrd, without disk drivers
[x] systemd-timesyncd - fix problems
[ ] Boot from USB drive - syslinux, script.
[x] uvesafb: include v86d; documentation; userparameter for configuration
[x] documentation - DEPLOY.md - how-to's for dhcpd + tftpd, dnsmasq, nginx.
[ ] documentation - check Thinstation documentation for better English language
[ ] README - add youtube video how it works

Probable alternatives to Vagrant:

Single build/server machine, chroot, mksquashfs --ex ...,
Single test machine
Problems with running X inside chroot. Probable solutions:
https://wiki.archlinux.org/index.php/Change_root#Run_graphical_applications_from_chroot
https://superuser.com/questions/688766/how-to-start-xorg-server-inside-plain-chroot#791643
https://kb8ojh.net/elb/musings/tag/xpra
https://wiki.gentoo.org/wiki/Project:X86/Chroot_Guide#Running_X_apps_inside_the_chroot
https://xpra.org/trac/wiki/Usage
http://0pointer.de/blog/projects/changing-roots
https://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch09_03.htm

Or just start X in main system and pass session with $DISPLAY and .Xauthoority and .xinitrc(is it possible?)

Or start X an main system and use Xephyr and forward it to chroot
https://askubuntu.com/a/824513/25924
https://wiki.mageia.org/en/Chroot#Using_Xephyr

Or use VNC (x11vnc)?
